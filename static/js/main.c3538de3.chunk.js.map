{"version":3,"sources":["pages/EmployeesPage.module.css","App.module.css","components/EmployeeListItem.module.css","redux/redux.ts","components/EmployeeListItem.tsx","pages/EmployeesPage.tsx","App.tsx","reportWebVitals.ts","redux/saga.ts","index.tsx"],"names":["module","exports","initialEployeesState","LOAD_POSTS","POSTS_LOADED","SET_ACTIVE","SET_NOT_ACTIVE","updateObjectInArray","array","action","map","item","index","id","payload","persistedState","serialState","localStorage","getItem","JSON","parse","err","loadState","SHOW_LOADER","HIDE_LOADER","hideLoader","type","initialLoaderState","loading","SHOW_ERROR","HIDE_ERROR","initialErrorState","error","rootReducer","combineReducers","eployees","state","length","updatedEmployees","employee","update","find","persistedEmployee","isActive","hasOwnProperty","loader","EmployeeListItem","dispatch","useDispatch","useState","setisActive","className","styles","container","active","name","lastName","firstName","value","onChange","notActiveEmployee","activeEmployee","checked","EmployeesPage","useEffect","employees","useSelector","activeEmployees","filter","orderedEmployees","sort","employee1","employee2","keys","split","sortedEmployees","reduce","obj","employeeLastName","displayedList","Object","entries","today","Date","sortedActiveEmployees","monthName","convertMonthsToObjectKeys","Array","from","e","i","toLocaleDateString","month","activeEmployeeMonth","dob","getMonth","push","listOfSortedEmployees","monthsFromToday","slice","listName","letter","subListName","App","history","useHistory","nav","listItem","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagaWatcher","sagaWorker","takeEvery","put","call","fetchEmployees","results","message","delay","url","a","Error","axios","get","data","saga","createSagaMiddleware","saveState","stringify","removeItem","setItem","console","log","store","createStore","composeWithDevTools","applyMiddleware","run","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3538de3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmployeesPage_container__1wchm\",\"employees\":\"EmployeesPage_employees__Q_-ps\",\"listName\":\"EmployeesPage_listName__2o7zS\",\"subListName\":\"EmployeesPage_subListName__1REBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"App_nav__1AynI\",\"listItem\":\"App_listItem__2-vSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmployeeListItem_container__3uj_7\",\"name\":\"EmployeeListItem_name__3nWGc\",\"active\":\"EmployeeListItem_active__TtnqK\"};","import { combineReducers } from \"redux\";\r\nimport { IEmployee } from \"../App\";\r\n\r\nconst initialEployeesState: IEmployee[] = [];\r\n\r\nexport const LOAD_POSTS = \"LOAD_POSTS\";\r\nexport const POSTS_LOADED = \"POSTS_LOADED\";\r\nexport const SET_ACTIVE = \"SET_ACTIVE\";\r\nexport const SET_NOT_ACTIVE = \"SET_NOT_ACTIVE\";\r\n\r\nexport interface IeployeesAction {\r\n  type: typeof SET_ACTIVE | typeof POSTS_LOADED | typeof SET_NOT_ACTIVE;\r\n  payload: IEmployee[];\r\n}\r\n\r\nfunction updateObjectInArray(array: IEmployee[], action: IeployeesAction) {\r\n  return array.map((item: IEmployee, index) => {\r\n    if (item.id !== action.payload[0].id) {\r\n      return item;\r\n    }\r\n    return {\r\n      ...item,\r\n      ...action.payload[0],\r\n    };\r\n  });\r\n}\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serialState = localStorage.getItem(\"appState\");\r\n    if (serialState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serialState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst persistedState = loadState();\r\n\r\nexport const eployeesReducer = (\r\n  state = initialEployeesState,\r\n  action: IeployeesAction\r\n) => {\r\n  switch (action.type) {\r\n    case POSTS_LOADED:\r\n      if (state.length === 0 && persistedState) {\r\n        const updatedEmployees = action.payload.map((employee) => {\r\n          const update = persistedState.eployees.find(\r\n            (persistedEmployee: IEmployee) =>\r\n              persistedEmployee.id === employee.id\r\n          );\r\n          if (update.isActive && !employee.hasOwnProperty(\"isActive\")) {\r\n            employee.isActive = update.isActive;\r\n            return employee;\r\n          } else {\r\n            return employee;\r\n          }\r\n        });\r\n        return [...updatedEmployees];\r\n      }\r\n      if (state.length && persistedState) {\r\n        const updatedEmployees = action.payload.map((employee) => {\r\n          const update = persistedState.eployees.find(\r\n            (persistedEmployee: IEmployee) =>\r\n              persistedEmployee.id === employee.id\r\n          );\r\n          if (update.isActive && !employee.hasOwnProperty(\"isActive\")) {\r\n            employee.isActive = update.isActive;\r\n            return employee;\r\n          } else {\r\n            return employee;\r\n          }\r\n        });\r\n        return [...updatedEmployees];\r\n      }\r\n      return [...state, ...action.payload];\r\n\r\n    case SET_ACTIVE:\r\n      return [...updateObjectInArray([...state], action)];\r\n    case SET_NOT_ACTIVE:\r\n      return [...updateObjectInArray([...state], action)];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const SHOW_LOADER = \"SHOW_LOADER\";\r\nexport const HIDE_LOADER = \"HIDE_LOADER\";\r\n\r\nexport function showLoader(): IloaderAction {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n}\r\n\r\nexport function hideLoader(): IloaderAction {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n}\r\n\r\nexport interface IloaderAction {\r\n  type: typeof SHOW_LOADER | typeof HIDE_LOADER;\r\n}\r\n\r\nconst initialLoaderState = { loading: false };\r\n\r\nexport const loaderReducer = (\r\n  state = initialLoaderState,\r\n  action: IloaderAction\r\n) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const SHOW_ERROR = \"SHOW_ERROR\";\r\nexport const HIDE_ERROR = \"HIDE_ERROR\";\r\n\r\nexport function showError(errorMessage: string): IerrorAction {\r\n  return {\r\n    type: SHOW_ERROR,\r\n    payload: errorMessage,\r\n  };\r\n}\r\n\r\nexport function hideError(): IerrorAction {\r\n  return {\r\n    type: HIDE_ERROR,\r\n    payload: \"\",\r\n  };\r\n}\r\n\r\nexport interface IerrorAction {\r\n  type: typeof SHOW_ERROR | typeof HIDE_ERROR;\r\n  payload: string;\r\n}\r\n\r\nconst initialErrorState = { error: \"\" };\r\n\r\nexport interface IinitialErrorState {\r\n  error: string;\r\n}\r\n\r\nexport const errorReducer = (\r\n  state: IinitialErrorState = initialErrorState,\r\n  action: IerrorAction\r\n): {\r\n  error: string;\r\n} => {\r\n  switch (action.type) {\r\n    case SHOW_ERROR:\r\n      return { ...state, error: action.payload };\r\n    case HIDE_ERROR:\r\n      return { ...state, error: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  eployees: eployeesReducer,\r\n  loader: loaderReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport type IState = ReturnType<typeof rootReducer>;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IEmployee } from \"../App\";\r\nimport { SET_ACTIVE, SET_NOT_ACTIVE } from \"../redux/redux\";\r\n\r\nimport styles from \"./EmployeeListItem.module.css\";\r\n\r\nexport interface IEmployeeProps {\r\n  employee: IEmployee;\r\n}\r\n\r\nconst e = {\r\n  id: \"5e00928d91e7feaa9872ec08\",\r\n  firstName: \"Yang\",\r\n  lastName: \"Carson\",\r\n  dob: \"2019-02-26T16:52:36.244Z\",\r\n  isActive: true,\r\n};\r\n\r\nexport const EmployeeListItem = ({ employee }: IEmployeeProps) => {\r\n  const dispatch = useDispatch();\r\n  const [isActive, setisActive] = useState(employee.isActive);\r\n  const handleChange = () => {\r\n    if (!isActive) {\r\n      const activeEmployee = { ...employee };\r\n      activeEmployee.isActive = true;\r\n\r\n      dispatch({ type: SET_ACTIVE, payload: [activeEmployee] });\r\n    } else {\r\n      const notActiveEmployee = { ...employee };\r\n      notActiveEmployee.isActive = false;\r\n      dispatch({ type: SET_NOT_ACTIVE, payload: [notActiveEmployee] });\r\n    }\r\n    setisActive(!isActive);\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.container} ${isActive ? styles.active : \"\"}`}>\r\n      <p\r\n        className={styles.name}\r\n      >{`${employee.lastName} ${employee.firstName}`}</p>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isActive\"\r\n          value=\"true\"\r\n          onChange={handleChange}\r\n          checked={isActive ? true : false}\r\n        />\r\n        <div>Active</div>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IEmployee } from \"../App\";\r\nimport { EmployeeListItem } from \"../components/EmployeeListItem\";\r\nimport { IState, LOAD_POSTS } from \"../redux/redux\";\r\n\r\nimport styles from \"./EmployeesPage.module.css\";\r\n\r\nexport interface IsoretdEployees {\r\n  [key: string]: IEmployee[];\r\n}\r\n\r\nexport const EmployeesPage = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: LOAD_POSTS });\r\n  }, []);\r\n  const employees = useSelector((state: IState) => state.eployees);\r\n  const loading = useSelector((state: IState) => state.loader);\r\n  const error = useSelector((state: IState) => state.error);\r\n\r\n  const activeEmployees: IEmployee[] = employees.filter(\r\n    (employee: IEmployee) => employee.isActive\r\n  );\r\n  const orderedEmployees = employees.sort(\r\n    (employee1: IEmployee, employee2: IEmployee) => {\r\n      if (employee1.lastName < employee2.lastName) {\r\n        return -1;\r\n      }\r\n      if (employee1.lastName < employee2.lastName) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n  );\r\n  const keys = [...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\")];\r\n  const convertAlphabetToObjectKeys = (array: string[]) => {\r\n    const initialValue = {};\r\n    return array.reduce((obj: IsoretdEployees, item: string) => {\r\n      return {\r\n        ...obj,\r\n        [item]: [],\r\n      };\r\n    }, initialValue);\r\n  };\r\n  let sortedEmployees: IsoretdEployees = convertAlphabetToObjectKeys(keys);\r\n\r\n  for (let index = 0; index < orderedEmployees.length; index++) {\r\n    const employee: IEmployee = orderedEmployees[index];\r\n    const employeeLastName = employee.lastName[0];\r\n    sortedEmployees[employeeLastName] = [\r\n      ...sortedEmployees[employeeLastName],\r\n      employee,\r\n    ];\r\n  }\r\n\r\n  const displayedList = Object.entries(sortedEmployees);\r\n  const today = new Date();\r\n  const months = Array.from({ length: 12 }, (e, i) => {\r\n    return new Date(0, i + 1, 0).toLocaleDateString(\"en\", {\r\n      month: \"long\",\r\n    });\r\n  });\r\n\r\n  interface ISortedMonth {\r\n    [key: string]: { monthName: string; employees: IEmployee[] };\r\n  }\r\n\r\n  const convertMonthsToObjectKeys = (array: string[]): ISortedMonth => {\r\n    const initialValue = {};\r\n    return array.reduce((obj: any, item: string, index: number) => {\r\n      return {\r\n        ...obj,\r\n        [index]: {\r\n          monthName: item,\r\n          employees: [],\r\n        },\r\n      };\r\n    }, initialValue);\r\n  };\r\n\r\n  let sortedActiveEmployees = convertMonthsToObjectKeys(months);\r\n  for (let index = 0; index < activeEmployees.length; index++) {\r\n    const activeEmployeeMonth = new Date(activeEmployees[index].dob).getMonth();\r\n    sortedActiveEmployees[activeEmployeeMonth].employees.push(\r\n      activeEmployees[index]\r\n    );\r\n    sortedActiveEmployees[activeEmployeeMonth].employees.sort(\r\n      (employee1: IEmployee, employee2: IEmployee) => {\r\n        if (employee1.dob > employee2.dob) return 1;\r\n        if (employee1.dob < employee2.dob) return -1;\r\n        return 0;\r\n      }\r\n    );\r\n  }\r\n\r\n  const listOfSortedEmployees = Object.entries(sortedActiveEmployees);\r\n\r\n  const monthsFromToday = [\r\n    ...listOfSortedEmployees.slice(today.getMonth()),\r\n    ...listOfSortedEmployees.slice(0, today.getMonth()),\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {loading.loading ? <p>Loading...</p> : null}\r\n      {error.error ? <p>`${error.error}`</p> : null}\r\n      <div className={styles.employees}>\r\n        <p className={styles.listName}>Employees</p>\r\n        {displayedList.map((letter) => {\r\n          return (\r\n            <div key={letter[0]}>\r\n              <p className={styles.subListName}>{letter[0]}</p>\r\n              {letter[1].length === 0\r\n                ? \"- - - -\"\r\n                : letter[1].map((employee) => (\r\n                    <EmployeeListItem employee={employee} key={employee.id} />\r\n                  ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <p className={styles.listName}>Employees birthday</p>\r\n        {monthsFromToday.map((month) => {\r\n          if (month[1].employees.length === 0) return null;\r\n          return (\r\n            <div key={month[1].monthName}>\r\n              <p className={styles.subListName}>{month[1].monthName}</p>\r\n              {month[1].employees.map((employee) => {\r\n                return (\r\n                  <div key={employee.id}>{`${employee.lastName} ${\r\n                    employee.firstName\r\n                  } ${new Date(employee.dob).toLocaleDateString()} `}</div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Route, Switch, Link, Router, useHistory } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\n\nimport { EmployeesPage } from \"./pages/EmployeesPage\";\n\nfunction App() {\n  const history = useHistory();\n  return (\n    <>\n      <Router history={history}>\n        <nav>\n          <ul className={styles.nav}>\n            <li className={styles.listItem}>\n              <Link to={`/`}>Home</Link>\n            </li>\n            <li className={styles.listItem}>\n              <Link to={`/employees`}>employees</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\">\n            Home Page\n          </Route>\n          <Route exact path=\"/employees\">\n            <EmployeesPage />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\nexport interface IEmployee {\n  id: string;\n  firstName: string;\n  lastName: string;\n  dob: string;\n  isActive?: boolean;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\nimport { call, delay, put, takeEvery } from \"redux-saga/effects\";\r\nimport { IEmployee } from \"../App\";\r\nimport {\r\n  hideError,\r\n  hideLoader,\r\n  LOAD_POSTS,\r\n  POSTS_LOADED,\r\n  showLoader,\r\n  SHOW_ERROR,\r\n} from \"./redux\";\r\n\r\nconst URL = `https://yalantis-react-school-api.yalantis.com/api/task0/users`;\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(LOAD_POSTS, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker(action: any) {\r\n  try {\r\n    yield put(showLoader());\r\n    const results: IEmployee[] = yield call(fetchEmployees, URL);\r\n    yield put({ type: POSTS_LOADED, payload: results });\r\n    yield put(hideLoader());\r\n  } catch (error) {\r\n    const results: IEmployee[] = [];\r\n    yield put({ type: POSTS_LOADED, payload: results });\r\n    yield put({ type: SHOW_ERROR, payload: error.message });\r\n    yield delay(3000);\r\n    yield put(hideError());\r\n    yield put(hideLoader());\r\n  }\r\n}\r\n\r\nconst fetchEmployees = async (url: string) => {\r\n  if (!url) return new Error(\"Wrong search params!\");\r\n  return await axios.get(url).then((data) => {\r\n    if (data.data.Error) {\r\n      throw Error(data.data.Error);\r\n    }\r\n    if (data.data.Error) {\r\n      return {\r\n        results: [],\r\n      };\r\n    }\r\n    return data.data;\r\n  });\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { IState, rootReducer } from \"./redux/redux\";\nimport { sagaWatcher } from \"./redux/saga\";\n\nconst saga = createSagaMiddleware();\n\nexport const saveState = (state: IState) => {\n  try {\n    const serialState = JSON.stringify(state);\n    localStorage.removeItem(\"appState\");\n    localStorage.setItem(\"appState\", serialState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(saga))\n);\n\nsaga.run(sagaWatcher);\nstore.subscribe(() => {\n  saveState({\n    ...store.getState(),\n  });\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}